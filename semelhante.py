import Levenshtein as lev

# def comparar_semelhanca(str1
# str2):
#     distancia = lev.distance(str1
# str2)
#     print(distancia)
#     max_len = max(len(str1)
# len(str2))
#     semelhanca = (1 - distancia / max_len) * 100
#     return semelhanca

# # Testa a função
# print(comparar_semelhanca('gatos'
# 'gatoers'))

# ['R$_M2'
# 'R$_AJ_ESTRUTURAL'
# 'KG_CONDENACOES'
# 'R$_TON'
# '%_CERTO_PESO'
# '%_AJ_ESTRUTURAL'
# '%_AJ_PROCEDIMENTOS'
# 'FUNRURAL'
# 'KG_AJ_QUALIDADE_QT'
# 'KG_AJ_PROCESSOS_PROCEDIMENTOS_PP'
# 'R$_AJ_QUALIDADE_QT'
# 'R$_AJ_PROCESSOS_PROCEDIMENTOS_PP'
# 'R$_RESULTADO_LOTE'
# 'CONTA_CORRENTE'
# '%_AJ_PROCESSOS_PROCEDIMENTOS_PP'
# 'CONTA_VINCULADA'
# 'R$_AJ_PROCEDIMENTOS'
# 'R$_AVE'
# 'KG_CERTO_PESO'
# 'SENAR'
# 'KG_AJ_ESTRUTURAL'
# 'KG_AJ_PROCEDIMENTOS'
# '%_RESULTADO_LOTE'
# 'KG_RESULTADO_LOTE'
# 'R$_CONDENACOES'
# 'R$_CERTO_PESO'
# '%_AJ_QUALIDADE_QT'
# '%_CONDENACOES']

# CLIFOR,
# INTEGRADO,
# MUNICIPIO,
# TECNICO, Técnico
# AREA_ALOJ,
# TELEFONE,
# AVIARIO,
# EMAIL,
# T_VENTILACAO,
# TIPO_PRODUTO,
# LINHAGEM,
# KG_M2,
# MATERIAL_GENETICO,clear
# AVE_M2,
# QUANT_ALOJADA,
# DATA_ALOJ,
# QUANT_ABATE,
# MORTE_TOTAL,
# QUANT_MORTOS,
# QUANT_ELIMINADOS,
# DATA_ABATE,
# IDADE_ABATE,
# PESO_M_PINTO,
# AVES_FALTANTES,
# PESO_MEDIO,
# GPD,
# PESO_TOTAL,
# CAAF,
# RACAO_CONSUMIDA,
# VALOR_KG_FRANGO,
# VALOR_KG_RACAO,
# VALOR_DO_PINTO,
# PERCENTUAL_BASICO,
# KG_CARNE_BASE,
# R$_BASICO,

# %_AJ_ESCALA_PROD,
# KG_AJ_ESCALA_PROD,
# R$_AJ_ESCALA_PROD,

%_SAZONALIDADE,
KG_SAZONALIDADE,
R$_SAZONALIDADE,
%_AJ_SEXO_PESO,
KG_AJ_SEXO_PESO,
R$_AJ_SEXO_PESO,
%_AJ_IDADE,
KG_AJ_IDADE,
R$_AJ_IDADE,
%_AJ_MORTALIDADE,
KG_AJ_MORTALIDADE,
R$_AJ_MORTALIDADE,
%_CONV_ALIMENTAR,
KG_CONV_ALIMENTAR,
R$_CONV_ALIMENTAR,
%_AJ_MERITOCRACIA_MT,
KG_AJ_MERITOCRACIA_MT,
R$_AJ_MERITOCRACIA_MT,
%_AJ_CALO_PATA_A,
KG_AJ_CALO_PATA_A,
R$_AJ_CALO_PATA_A,
%_CONDENACOES,
KG_CONDENACOES,
R$_CONDENACOES,
%_AJ_QUALIDADE_QT,
KG_AJ_QUALIDADE_QT,
R$_AJ_QUALIDADE_QT,
%_AJ_ESTRUTURAL,
KG_AJ_ESTRUTURAL,
R$_AJ_ESTRUTURAL,
%_AJ_PROCEDIMENTOS,
KG_AJ_PROCEDIMENTOS,
R$_AJ_PROCEDIMENTOS,
%_AJ_PROCESSOS_PROCEDIMENTOS_PP,
KG_AJ_PROCESSOS_PROCEDIMENTOS_PP,
R$_AJ_PROCESSOS_PROCEDIMENTOS_PP,
%_RESULTADO_LOTE,
KG_RESULTADO_LOTE,
R$_RESULTADO_LOTE,
R$_AVE,
R$_TON,
R$_M2,
FUNRURAL,
SENAR,
CONTA_CORRENTE,
CONTA_VINCULADA,


